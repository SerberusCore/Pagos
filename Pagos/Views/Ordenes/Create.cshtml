@model Pagos.Models.Ordenes

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ordenes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrdenCodigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenCodigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenCodigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrdenTipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrdenTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenFecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenFecha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenFecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenProveedor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrdenProveedor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrdenProveedor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenSubtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenSubtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenSubtotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenIgv, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenIgv, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenIgv, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenPlazoEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenPlazoEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenPlazoEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenFormaPago, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrdenFormaPago", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrdenFormaPago, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenContactoInterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OrdenContactoInterno", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OrdenContactoInterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdenLugarEntrega, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrdenLugarEntrega, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrdenLugarEntrega, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<button class="btn btn-default" data-toggle="modal" data-target="#EdicionDetalle">Nuevo Detalle</button>
<div id="divListaDetalle"></div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script type="text/javascript">
    var id;
    var confirmador;
        $(document).ready(function () {
            $("#OrdenProveedor").change(function () {
                $.get('@Url.Action("ObtenerContactos")', { proveedorId: $("#OrdenProveedor").val() }, function (data, status, jq) {
                    var combo = $("#OrdenContactoInterno");
                    combo.empty();
                    combo.append("<option selected value='@Pagos.Recursos.RConstantes.ValorSeleccione'>@Pagos.Recursos.RConstantes.Seleccione</option>")

                    $.each(data, function (i, item) {
                        var option = "<option selected value='" + item.ProveedorContactoId + "'>" + item.ProveedorContactoApellidos + ", " + item.ProveedorContactoNombres + "</option>"
                        combo.append(option);
                    });
                });
            });
            $("#GuardarOrden").click(function () {
                $.validator.unobtrusive.parse("#OrdenDetalle");
                if ($("#OrdenDetalle").validate()) {
                    var Orden = {
                        OrdenCodigo: $("#OrdenCodigo").val(),
                        OrdenTipo: $("#OrdenTipo").val(),
                        OrdenFecha: $("#OrdenFecha").val(),
                        OrdenProveedor: $("#OrdenProveedor").val(),
                        OrdenSubtotal: $("#OrdenSubtotal").val(),
                        OrdenIgv: $("#OrdenIgv").val(),
                        OrdenTotal: $("#OrdenTotal").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                        OrdenFormaPago: $("#OrdenFormaPago").val(),
                        OrdenContactoInterno: $("#OrdenContactoInterno").val(),
                        OrdenEstado: $("#OrdenEstado").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                    };

                    $.post('@Url.Action("Crear")', Orden, function (data, status, jq) {
                        alert(data);
                    });
                }
            });
            $("#EdicionDetalle").on("show.bs.modal", function (event) {
                var button = $(event.relatedTarget);
                $("#OrdenDetalleId").val('');
                $("#OrdenDetalleItem").val('');
                $("#OrdenDetalleDescripcion").val('');
                $("#OrdenDetalleCuotas").val('');
                $("#OrdenDetalleUnidad").val('');
                $("#OrdenDetallePrecioUnitario").val('');
                $("#OrdenDetallePrecioTotal").val('');
            });
            $("#GuardarDetalle").click(function () {
                $.validator.unobtrusive.parse("#OrdenDetalle");
                $("#OrdenDetalle").validate();
                if ($("#OrdenDetalle").valid()) {
                    var OrdenesDetalle = {
                        OrdenDetalleId: $("#OrdenDetalleId").val(),
                        OrdenDetalleItem: $("#OrdenDetalleItem").val(),
                        OrdenDetalleDescripcion: $("#OrdenDetalleDescripcion").val(),
                        OrdenDetalleCuotas: $("#OrdenDetalleCuotas").val(),
                        OrdenDetalleUnidad: $("#OrdenDetalleUnidad").val(),
                        OrdenDetallePrecioUnitario: $("#OrdenDetallePrecioUnitario").val(),
                        OrdenDetallePrecioTotal: $("#OrdenDetallePrecioTotal").val()
                    };
                    guardarDetalle(OrdenesDetalle);
                    $("#EdicionDetalle").modal("hide");
                }
            });

            var guardarDetalle = function (detalle) {
                $.post('@Url.Action("Create","OrdenesDetalles")', detalle, function (data, status, jq) {
                    $("#divListaDetalle").html(data);
                }).always(function () {
                    $("#divListaDetalle").find("[data-target=#EdicionDetalle]").click(function () {
                        id = $(this).attr("data-id");
                        $.get('@Url.Action("Edit")', { id: id }, function (data, status, jq) {
                            $("#EdicionDetalle").find(".modal-body").html(data);
                        });
                        $("#EdicionDetalle").modal('show');
                    });
                    $("#divListaDetalle").find("[data-target=#confirmar]").click(function () {
                        id = $(this).attr("data-id");
                        confirmador = confirmar(function (id) {
                            $.get('@Url.Action("Borrar")', { id: id }, function (data, status, jq) {
                                $("#EdicionDetalle").find(".modal-body").html(data);
                            });
                        });
                        confirmador.abrir();
                    });
                });
            };
        });
    </script>
}
@Html.Partial("_confirmar")
<div class="modal fade" tabindex="-1" role="dialog" id="EdicionDetalle">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Detalle de Orden</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/OrdenesDetalles/_CrearDetalle.cshtml", new Pagos.Models.OrdenesDetalles())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="GuardarDetalle">Guardar</button>
            </div>
        </div>
    </div>
</div>
