@model Pagos.Models.Facturas

@{
    ViewBag.Title = "Create";
}
<br>
<h2>Registrar Factura</h2>
<br>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Datos Generales</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FacturaProyecto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacturaProyecto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacturaProyecto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacturaTipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacturaTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaNumero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacturaNumero, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacturaNumero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaSerie, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacturaSerie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacturaSerie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaFechaEmision, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacturaFechaEmision, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacturaFechaEmision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaFechaVencimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FacturaFechaVencimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacturaFechaVencimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacturaMoneda, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacturaMoneda", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacturaMoneda, "", new { @class = "text-danger" })
            </div>
        </div>
        <br>

    </div>



    <div class="form-horizontal">
        <h4>Detalle de la Factura</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <button type="button" class="btn btn-default" data-toggle="modal" data-target="#EdicionDetalle">Nuevo Detalle</button>
        <br>
        <div id="divListaDetalle"></div>
        <br>
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaSubtotal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaSubtotal, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaSubtotal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaIgv, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaIgv, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaIgv, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaImporteTotal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaImporteTotal, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaImporteTotal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaFondoGarantia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaFondoGarantia, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaFondoGarantia, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaPorcentajeDetraccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaPorcentajeDetraccion, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaPorcentajeDetraccion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaMontoDetraccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaMontoDetraccion, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaMontoDetraccion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FacturaImportePagar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacturaImportePagar, null, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacturaImportePagar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <br>
    <div class="form-group">
        <div class="col-md-offset-1 col-md-2">
            <input type="submit" value="Guardar Factura" class="btn btn-default" />
        </div>

        @*<div class="col-md-offset-0">
            <input type="submit" value="Eliminar Factura" class="btn btn-default" />
        </div>*@
    </div>
}

@section scripts{
    <script type="text/javascript">

    var id;
    var confirmador;
                    $(document).ready(function () {
                        $("#FacturaSubtotal").prop("readonly", true);
                        $("#FacturaIgv").prop("readonly", true);
                        $("#FacturaImporteTotal").prop("readonly", true);

            $("#GuardarOrden").click(function () {
                $.validator.unobtrusive.parse("#OrdenDetalle");
                if ($("#OrdenDetalle").validate()) {
                    var Orden = {
                        OrdenCodigo: $("#OrdenCodigo").val(),
                        OrdenTipo: $("#OrdenTipo").val(),
                        OrdenFecha: $("#OrdenFecha").val(),
                        OrdenProveedor: $("#OrdenProveedor").val(),
                        OrdenSubtotal: $("#OrdenSubtotal").val(),
                        OrdenIgv: $("#OrdenIgv").val(),
                        OrdenTotal: $("#OrdenTotal").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                        OrdenFormaPago: $("#OrdenFormaPago").val(),
                        OrdenContactoInterno: $("#OrdenContactoInterno").val(),
                        OrdenEstado: $("#OrdenEstado").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                        OrdenPlazoEntrega: $("#OrdenPlazoEntrega").val(),
                    };

                    $.post('@Url.Action("Crear")', Orden, function (data, status, jq) {
                        alert(data);
                    });
                }
            });
                        $("#EdicionDetalle").on("show.bs.modal", function (event) {
                var button = $(event.relatedTarget);
                $("#FacturaId").val('');
                $("#FacturaDetalleDescripcion").val('');
                $("#FacturaDetalleCantidad").val('');
                $("#FacturaDetallePrecioUnitario").val('');
                $("#FacturaDetalleImporteTotal").val('');

                var calculo = function () {
                    var precioUnitario = $("#FacturaDetallePrecioUnitario").val();
                    var cantidad = $("#FacturaDetalleCantidad").val();
                    precioUnitario = isNaN(parseFloat(precioUnitario)) ? 0 : parseFloat(precioUnitario);
                    cantidad = isNaN(parseFloat(cantidad)) ? 0 : parseFloat(cantidad);
                    var total = precioUnitario * cantidad;

                    $("#FacturaDetallePrecioUnitario").val(precioUnitario.toFixed(2));
                    $("#FacturaDetalleCantidad").val(cantidad.toFixed(2));
                    $("#FacturaDetalleImporteTotal").val(total.toFixed(2));
                };
                $("#FacturaDetalleCantidad").change(calculo);
                $("#FacturaDetallePrecioUnitario").change(calculo);
                $("#FacturaDetalleImporteTotal").prop("readonly", true);
            });
            $("#GuardarDetalle").click(function () {
                $.validator.unobtrusive.parse("#FacturaDetalle");
                $("#FacturaDetalle").validate();
                if ($("#FacturaDetalle").valid()) {
                    var FacturasDetalle = {
                        FacturaDetalleId: $("#FacturaDetalleId").val(),
                        FacturaDetalleDescripcion: $("#FacturaDetalleDescripcion").val(),
                        FacturaDetalleCantidad: $("#FacturaDetalleCantidad").val(),
                        FacturaDetallePrecioUnitario: $("#FacturaDetallePrecioUnitario").val(),
                        FacturaDetalleImporteTotal: $("#FacturaDetalleImporteTotal").val()
                    };
                    guardarDetalle(FacturasDetalle);
                    $("#EdicionDetalle").modal("hide");
                }
            });
            var subtotal = function () {
                var valores = $("#divListaDetalle").find('[data-content="Total"]');
                var sum = 0;
                $.each(valores, function (i, item) {
                    var aux = $(item).text().trim();
                    aux = isNaN(parseFloat(aux)) ? 0 : parseFloat(aux);
                    sum += aux;
                });

                var igv = sum * 18 / 100;
                var importe = sum + igv;
                $("#FacturaSubtotal").val(sum.toFixed(2));
                $("#FacturaIgv").val(igv.toFixed(2));
                $("#FacturaImporteTotal").val(importe.toFixed(2));
            };
            var guardarDetalle = function (detalle) {
                $.post('@Url.Action("Create","FacturasDetalles")', detalle, function (data, status, jq) {
                    $("#divListaDetalle").html(data);
                    subtotal();
                }).always(function () {
                    $("#divListaDetalle").find("[data-target=#EdicionDetalle]").click(function () {
                        id = $(this).attr("data-id");
                        $.get('@Url.Action("Edit")', { id: id }, function (data, status, jq) {
                            $("#EdicionDetalle").find(".modal-body").html(data);
                        });
                        $("#EdicionDetalle").modal('show');
                    });
                    $("#divListaDetalle").find("[data-target=#confirmar]").click(function () {
                        id = $(this).attr("data-id");
                        confirmador = confirmar(function (id) {
                            $.get('@Url.Action("Borrar")', { id: id }, function (data, status, jq) {
                                $("#EdicionDetalle").find(".modal-body").html(data);
                            });
                        });
                        confirmador.abrir();
                    });
                });
            };
        });
    </script>
}




@*@Html.Partial("_confirmar")*@
<div class="modal fade" tabindex="-1" role="dialog" id="EdicionDetalle">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Detalle de Factura</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/FacturasDetalles/Create.cshtml", new Pagos.Models.FacturasDetalles())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="GuardarDetalle">Guardar</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Regresar", "Index")
</div>
